# Uncomment this line to define a global platform for your project
# Versão mínima do iOS compatível com todas as dependências
platform :ios, '15.5'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # TensorFlow Lite - necessário para tflite_flutter
  pod 'TensorFlowLiteC', '~> 2.14.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # Configurações de deployment
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'

      # Desabilitar Bitcode (necessário para TensorFlow Lite e MLKit)
      config.build_settings['ENABLE_BITCODE'] = 'NO'

      # Configurações de arquitetura - PADRONIZADAS para evitar conflitos
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'

      # Remover configuração que causava conflito entre pods
      # EXCLUDED_ARCHS será gerenciado individualmente pelos pods
      config.build_settings.delete('EXCLUDED_ARCHS[sdk=iphonesimulator*]')

      # Fix para MLKit e outras libs que não suportam simulador arm64
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'

      # Permitir builds não modulares (necessário para alguns frameworks)
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'

      # Configurações de otimização
      config.build_settings['SWIFT_VERSION'] = '5.0'

      # Otimizações apenas para Debug
      if config.name == 'Debug'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
      end

      # Remover configuração que pode causar problemas
      config.build_settings.delete('CODE_SIGNING_ALLOWED')

      # Permite que o simulador use as bibliotecas
      if config.base_configuration_reference
        xcconfig_path = config.base_configuration_reference.real_path
        if File.exist?(xcconfig_path)
          xcconfig = File.read(xcconfig_path)
          xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
          File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
        end
      end
    end
  end
end